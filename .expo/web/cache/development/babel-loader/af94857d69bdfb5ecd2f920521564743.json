{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/yassine/Documents/MyDigitalSchoolS2/dev hybride/cook-app/ListRecipe.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Data from \"./app/components/data.json\";\n\nvar ListRecipe = function (_React$Component) {\n  _inherits(ListRecipe, _React$Component);\n\n  var _super = _createSuper(ListRecipe);\n\n  function ListRecipe() {\n    _classCallCheck(this, ListRecipe);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ListRecipe, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var data = Data;\n\n      var renderItem = function renderItem(_ref) {\n        var navigation = _ref.navigation,\n            item = _ref.item;\n        return React.createElement(View, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 9,\n            columnNumber: 7\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: styles.containerRecipe,\n          onPress: function onPress() {\n            return _this.props.navigation.navigate('DetailRecipe', {\n              item: item\n            });\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 13\n          }\n        }, React.createElement(Image, {\n          source: {\n            uri: item.image\n          },\n          style: styles.recipeImage,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 15\n          }\n        }), React.createElement(Text, {\n          style: styles.recipeText,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 15\n          }\n        }, item.title)));\n      };\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 7\n        }\n      }, React.createElement(FlatList, {\n        data: data,\n        renderItem: renderItem,\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return ListRecipe;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  recipeImage: {\n    width: 350,\n    height: 90,\n    flex: 1,\n    alignSelf: 'center',\n    textAlign: 'center',\n    padding: 15,\n    margin: 'auto',\n    marginTop: 20,\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20\n  },\n  containerRecipe: {\n    backgroundColor: 'lightblue',\n    paddingTop: 20,\n    paddingBottom: 20,\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n    borderBotLeftRadius: 20,\n    borderBotRightRadius: 20,\n    marginTop: 20,\n    alignItems: 'center'\n  },\n  recipeText: {\n    marginTop: 10\n  }\n});\nexport default ListRecipe;","map":{"version":3,"sources":["/Users/yassine/Documents/MyDigitalSchoolS2/dev hybride/cook-app/ListRecipe.js"],"names":["React","Data","ListRecipe","data","renderItem","navigation","item","styles","containerRecipe","props","navigate","uri","image","recipeImage","recipeText","title","container","id","Component","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","width","height","alignSelf","textAlign","padding","margin","marginTop","borderTopLeftRadius","borderTopRightRadius","paddingTop","paddingBottom","borderBotLeftRadius","borderBotRightRadius"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;AAEA,OAAOC,IAAP;;IACMC,U;;;;;;;;;;;;;WAEJ,kBAAS;AAAA;;AACP,UAAMC,IAAI,GAAGF,IAAb;;AACA,UAAMG,UAAU,GAAG,SAAbA,UAAa;AAAA,YAAGC,UAAH,QAAGA,UAAH;AAAA,YAAcC,IAAd,QAAcA,IAAd;AAAA,eACjB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACM,oBAAC,gBAAD;AAAkB,UAAA,KAAK,EAAEC,MAAM,CAACC,eAAhC;AAAiD,UAAA,OAAO,EAAG;AAAA,mBAAM,KAAI,CAACC,KAAL,CAAWJ,UAAX,CAAsBK,QAAtB,CAA+B,cAA/B,EAA8C;AAAEJ,cAAAA,IAAI,EAAEA;AAAR,aAA9C,CAAN;AAAA,WAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD;AAAO,UAAA,MAAM,EAAE;AAACK,YAAAA,GAAG,EAAEL,IAAI,CAACM;AAAX,WAAf;AAAkC,UAAA,KAAK,EAAEL,MAAM,CAACM,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEN,MAAM,CAACO,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiCR,IAAI,CAACS,KAAtC,CAFF,CADN,CADiB;AAAA,OAAnB;;AAQA,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAER,MAAM,CAACS,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACQ,QAAA,IAAI,EAAEb,IADd;AAEQ,QAAA,UAAU,EAAEC,UAFpB;AAGQ,QAAA,YAAY,EAAE,sBAAAE,IAAI;AAAA,iBAAIA,IAAI,CAACW,EAAT;AAAA,SAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AASD;;;;EArBsBjB,KAAK,CAACkB,S;;AAwB/B,IAAMX,MAAM,GAAGY,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GADoB;AAO/BX,EAAAA,WAAW,EAAE;AACXY,IAAAA,KAAK,EAAC,GADK;AAEXC,IAAAA,MAAM,EAAE,EAFG;AAGXL,IAAAA,IAAI,EAAE,CAHK;AAIXM,IAAAA,SAAS,EAAE,QAJA;AAKXC,IAAAA,SAAS,EAAE,QALA;AAMXC,IAAAA,OAAO,EAAE,EANE;AAOXC,IAAAA,MAAM,EAAG,MAPE;AAQXC,IAAAA,SAAS,EAAG,EARD;AASXC,IAAAA,mBAAmB,EAAE,EATV;AAUXC,IAAAA,oBAAoB,EAAE;AAVX,GAPkB;AAmBjCzB,EAAAA,eAAe,EAAC;AACdc,IAAAA,eAAe,EAAE,WADH;AAEdY,IAAAA,UAAU,EAAG,EAFC;AAGdC,IAAAA,aAAa,EAAG,EAHF;AAIdH,IAAAA,mBAAmB,EAAE,EAJP;AAKdC,IAAAA,oBAAoB,EAAE,EALR;AAMdG,IAAAA,mBAAmB,EAAE,EANP;AAOdC,IAAAA,oBAAoB,EAAE,EAPR;AAQdN,IAAAA,SAAS,EAAE,EARG;AASdR,IAAAA,UAAU,EAAG;AATC,GAnBiB;AA8BjCT,EAAAA,UAAU,EAAC;AACTiB,IAAAA,SAAS,EAAG;AADH;AA9BsB,CAAlB,CAAf;AAmCA,eAAe7B,UAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View,Button, FlatList,Image,TouchableOpacity } from 'react-native';\nimport Data from './app/components/data.json'\nclass ListRecipe extends React.Component {\n  \n  render() {\n    const data = Data\n    const renderItem = ({ navigation,item }) => (\n      <View>\n            <TouchableOpacity style={styles.containerRecipe} onPress={ () => this.props.navigation.navigate('DetailRecipe',{ item: item})} >\n              <Image source={{uri: item.image}} style={styles.recipeImage}/>\n              <Text style={styles.recipeText}>{item.title}</Text>\n            </TouchableOpacity>\n      </View>\n    );\n    return (\n      <View style={styles.container}>\n        <FlatList\n                data={data}\n                renderItem={renderItem}\n                keyExtractor={item => item.id}\n            />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  recipeImage: {\n    width:350,\n    height :90,\n    flex: 1,\n    alignSelf: 'center',\n    textAlign: 'center',\n    padding :15,\n    margin : 'auto',\n    marginTop : 20,\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20\n},\ncontainerRecipe:{\n  backgroundColor: 'lightblue',\n  paddingTop : 20,\n  paddingBottom : 20,\n  borderTopLeftRadius: 20,\n  borderTopRightRadius: 20,\n  borderBotLeftRadius: 20,\n  borderBotRightRadius: 20,\n  marginTop: 20,\n  alignItems : 'center'\n},\nrecipeText:{\n  marginTop : 10\n}\n});\n\nexport default ListRecipe;"]},"metadata":{},"sourceType":"module"}