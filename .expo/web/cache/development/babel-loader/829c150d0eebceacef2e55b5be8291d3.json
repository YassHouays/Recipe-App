{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/yassine/Documents/MyDigitalSchoolS2/dev hybride/cook-app/Screens/DetailScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { FlatList } from 'react-native-gesture-handler';\nimport Spoonacular from \"../API/Spoonacular\";\nimport RecipeSteps from \"../Components/RecipeSteps\";\n\nvar RecipeScreen = function RecipeScreen(_ref) {\n  var navigation = _ref.navigation;\n  console.disableYellowBox = true;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      results = _useState2[0],\n      setResults = _useState2[1];\n\n  var recipeItem = navigation.getParam('item');\n  var recipeID = recipeItem.id;\n  console.log(recipeItem);\n  console.log(\"Recipe name is ======== \" + recipeItem.title);\n\n  var getDetails = function getDetails(recipeID) {\n    var response;\n    return _regeneratorRuntime.async(function getDetails$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Spoonacular.get(\"/\" + recipeID + \"/analyzedInstructions\", {\n              params: {\n                apiKey: '214646a8a7c7476b8fb158a343055d00',\n                id: recipeID,\n                stepBreakdown: true\n              }\n            }));\n\n          case 2:\n            response = _context.sent;\n            setResults(response.data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getDetails(recipeID);\n  }, []);\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    style: styles.imageStyle,\n    source: {\n      uri: recipeItem.image\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.headingStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"RECIPE: \", recipeItem.title), React.createElement(View, {\n    style: {\n      borderBottomColor: 'black',\n      borderBottomWidth: 1,\n      marginHorizontal: 15,\n      marginBottom: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), React.createElement(FlatList, {\n    keyExtractor: function keyExtractor(result) {\n      return result.id;\n    },\n    data: results,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(RecipeSteps, {\n        result: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 28\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  imageStyle: {\n    width: 350,\n    alignSelf: 'center',\n    height: 200,\n    borderRadius: 10,\n    margin: 5\n  },\n  headingStyle: {\n    marginTop: 5,\n    marginBottom: 5,\n    marginLeft: 15,\n    marginRight: 15,\n    fontWeight: 'bold',\n    fontSize: 24\n  }\n});\nexport default RecipeScreen;","map":{"version":3,"sources":["/Users/yassine/Documents/MyDigitalSchoolS2/dev hybride/cook-app/Screens/DetailScreen.js"],"names":["React","useState","useEffect","FlatList","Spoonacular","RecipeSteps","RecipeScreen","navigation","console","disableYellowBox","results","setResults","recipeItem","getParam","recipeID","id","log","title","getDetails","get","params","apiKey","stepBreakdown","response","data","flex","styles","imageStyle","uri","image","headingStyle","borderBottomColor","borderBottomWidth","marginHorizontal","marginBottom","result","item","StyleSheet","create","width","alignSelf","height","borderRadius","margin","marginTop","marginLeft","marginRight","fontWeight","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, StyleSheet, Image, ScrollView } from 'react-native';\nimport { FlatList } from 'react-native-gesture-handler';\nimport Spoonacular from '../API/Spoonacular';\nimport RecipeSteps from '../Components/RecipeSteps';\n\nconst RecipeScreen = ({ navigation }) => {\n\n    console.disableYellowBox = true; \n\n    const [results, setResults] = useState([]);\n\n    const recipeItem = navigation.getParam('item');\n    const recipeID = recipeItem.id;\n    \n    console.log(recipeItem);\n    console.log(\"Recipe name is ======== \" + recipeItem.title);\n\n    const getDetails = async (recipeID) => {\n        const response = await Spoonacular.get(`/${recipeID}/analyzedInstructions`, {\n            params: {\n                apiKey: '214646a8a7c7476b8fb158a343055d00',\n                id: recipeID,\n                stepBreakdown: true\n                //ranking: 1\n                //ignorePantry: true\n            }});\n        setResults(response.data);\n    };\n    useEffect( () => {\n        getDetails(recipeID);\n    }, []);\n\n\n    return (\n        <View style={{flex: 1}}>\n            <ScrollView>\n            <Image style={styles.imageStyle} source={{ uri: recipeItem.image }} />\n            <Text style={styles.headingStyle}>RECIPE: {recipeItem.title}</Text>\n            <View style={{borderBottomColor: 'black', borderBottomWidth: 1, marginHorizontal: 15, marginBottom: 10}}/>\n            <FlatList\n                keyExtractor= {(result) => result.id}\n                data={results}\n                renderItem= {( {item} ) => {\n                    return <RecipeSteps result={item} />\n                }}\n\n            />\n            </ScrollView>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n\n    imageStyle: {\n        width: 350,\n        alignSelf: 'center',\n        height: 200,\n        borderRadius: 10,\n        margin: 5\n    },\n\n    headingStyle: {\n        marginTop: 5,\n        marginBottom: 5,\n        marginLeft: 15,\n        marginRight: 15,\n        fontWeight: 'bold',\n        fontSize: 24\n    },\n\n});\n\nexport default RecipeScreen;"]},"metadata":{},"sourceType":"module"}