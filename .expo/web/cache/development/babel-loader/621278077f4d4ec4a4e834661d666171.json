{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/yassine/Documents/MyDigitalSchoolS2/dev hybride/cook-app/DetailRecipe.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport axios from 'axios';\nimport Data from \"./app/components/detailRecipe.json\";\n\nvar DetailRecipe = function (_React$Component) {\n  _inherits(DetailRecipe, _React$Component);\n\n  var _super = _createSuper(DetailRecipe);\n\n  function DetailRecipe() {\n    var _this;\n\n    _classCallCheck(this, DetailRecipe);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      recette: {}\n    };\n    return _this;\n  }\n\n  _createClass(DetailRecipe, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(\"https://api.spoonacular.com/recipes/\" + this.props.route.params.item.id + \"/information?apiKey=bbf788cda4f34fcc8b58403847622e97\").then(function (res) {\n        var recette = res.data;\n\n        _this2.setState({\n          recette: recette\n        });\n\n        console.log(recette);\n      });\n      console.log(\"https://api.spoonacular.com/recipes/\" + this.props.route.params.item.id + \"/information?apiKey=bbf788cda4f34fcc8b58403847622e97\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var renderItem = function renderItem(_ref) {\n        var item = _ref.item;\n        return React.createElement(Text, {\n          style: styles.ingredients,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 784,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          style: styles.value,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 784,\n            columnNumber: 42\n          }\n        }, item.amount), \" of \", React.createElement(Text, {\n          style: styles.value,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 784,\n            columnNumber: 95\n          }\n        }, item.unit), \" \", item.name);\n      };\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 787,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.colLeft,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 788,\n          columnNumber: 9\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: this.props.route.params.item.image\n        },\n        style: styles.recipeImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 789,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        style: styles.colLeftText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 790,\n          columnNumber: 11\n        }\n      }, this.props.route.params.item.title)), React.createElement(View, {\n        style: styles.colRight,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 792,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.titleH2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 793,\n          columnNumber: 11\n        }\n      }, \"D\\xE9tails\"), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 794,\n          columnNumber: 11\n        }\n      }, \"Vegetarian : \", React.createElement(Text, {\n        style: styles.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 794,\n          columnNumber: 30\n        }\n      }, this.state.recette.vegetarian ? 'Oui' : 'Non')), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 795,\n          columnNumber: 11\n        }\n      }, \"Vegan : \", React.createElement(Text, {\n        style: styles.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 795,\n          columnNumber: 25\n        }\n      }, this.state.recette.vegan ? 'Oui' : 'Non')), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 11\n        }\n      }, \"Price : \", React.createElement(Text, {\n        style: styles.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 25\n        }\n      }, this.state.recette.pricePerServing, \" $\")), React.createElement(Text, {\n        style: styles.spacer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 798,\n          columnNumber: 11\n        }\n      }, \" \"), React.createElement(Text, {\n        style: styles.titleH2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 800,\n          columnNumber: 11\n        }\n      }, \"Ingr\\xE9dients\"), React.createElement(FlatList, {\n        style: styles.ingredientsContainer,\n        data: this.state.recette.extendedIngredients,\n        renderItem: renderItem,\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 801,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return DetailRecipe;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {},\n  recipeImage: {\n    width: 500,\n    height: 500,\n    alignSelf: 'center',\n    textAlign: 'center',\n    padding: 15,\n    margin: 'auto',\n    marginTop: 20,\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n    borderBottomLeftRadius: 20,\n    borderBottomRightRadius: 20\n  },\n  colLeft: {\n    flex: 0.5,\n    height: 600,\n    padding: 10,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  colLeftText: {\n    color: '#ffa500',\n    marginTop: 20,\n    fontSize: 20\n  },\n  colRight: {\n    flex: 0.5,\n    height: 100,\n    padding: 10,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  titleH2: {\n    fontSize: 30,\n    marginBottom: 10\n  },\n  spacer: {\n    height: 1,\n    width: 500,\n    backgroundColor: '#000',\n    margin: 20\n  },\n  value: {\n    fontWeight: 'bold',\n    color: '#ffa500'\n  },\n  ingredientsContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  },\n  ingredients: {\n    color: '#000'\n  }\n});\nexport default DetailRecipe;","map":{"version":3,"sources":["/Users/yassine/Documents/MyDigitalSchoolS2/dev hybride/cook-app/DetailRecipe.js"],"names":["React","axios","Data","DetailRecipe","state","recette","get","props","route","params","item","id","then","res","data","setState","console","log","renderItem","styles","ingredients","value","amount","unit","name","container","colLeft","uri","image","recipeImage","colLeftText","title","colRight","titleH2","vegetarian","vegan","pricePerServing","spacer","ingredientsContainer","extendedIngredients","Component","StyleSheet","create","width","height","alignSelf","textAlign","padding","margin","marginTop","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","flex","backgroundColor","alignItems","justifyContent","color","fontSize","marginBottom","fontWeight","flexDirection","flexWrap"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View,Button,Image,FlatList } from 'react-native';\nimport axios from 'axios';\nimport Data from './app/components/detailRecipe.json'\n\n\nclass DetailRecipe extends React.Component {\n  state = {\n    recette: {}\n  }\n\n  componentDidMount() {\n    axios.get(`https://api.spoonacular.com/recipes/${this.props.route.params.item.id}/information?apiKey=bbf788cda4f34fcc8b58403847622e97`)\n      .then(res => {\n        const recette = res.data;\n        this.setState({ recette });\n        console.log(recette);\n      })\n      console.log(`https://api.spoonacular.com/recipes/${this.props.route.params.item.id}/information?apiKey=bbf788cda4f34fcc8b58403847622e97`)\n    // this.setState({recette : \n    //   {\n    //     \"vegetarian\": true,\n    //     \"vegan\": true,\n    //     \"glutenFree\": true,\n    //     \"dairyFree\": true,\n    //     \"veryHealthy\": true,\n    //     \"cheap\": false,\n    //     \"veryPopular\": true,\n    //     \"sustainable\": false,\n    //     \"weightWatcherSmartPoints\": 4,\n    //     \"gaps\": \"no\",\n    //     \"lowFodmap\": false,\n    //     \"aggregateLikes\": 3689,\n    //     \"spoonacularScore\": 99,\n    //     \"healthScore\": 76,\n    //     \"creditsText\": \"Full Belly Sisters\",\n    //     \"license\": \"CC BY-SA 3.0\",\n    //     \"sourceName\": \"Full Belly Sisters\",\n    //     \"pricePerServing\": 112.39,\n    //     \"extendedIngredients\": [\n    //     {\n    //     \"id\": 11090,\n    //     \"aisle\": \"Produce\",\n    //     \"image\": \"broccoli.jpg\",\n    //     \"consistency\": \"solid\",\n    //     \"name\": \"broccoli\",\n    //     \"nameClean\": \"broccoli\",\n    //     \"original\": \"2 cups cooked broccoli, chopped small\",\n    //     \"originalString\": \"2 cups cooked broccoli, chopped small\",\n    //     \"originalName\": \"cooked broccoli, chopped small\",\n    //     \"amount\": 2,\n    //     \"unit\": \"cups\",\n    //     \"meta\": [\n    //     \"cooked\",\n    //     \"chopped\"\n    //     ],\n    //     \"metaInformation\": [\n    //     \"cooked\",\n    //     \"chopped\"\n    //     ],\n    //     \"measures\": {\n    //     \"us\": {\n    //     \"amount\": 2,\n    //     \"unitShort\": \"cups\",\n    //     \"unitLong\": \"cups\"\n    //     },\n    //     \"metric\": {\n    //     \"amount\": 473.176,\n    //     \"unitShort\": \"ml\",\n    //     \"unitLong\": \"milliliters\"\n    //     }\n    //     }\n    //     },\n    //     {\n    //     \"id\": 11135,\n    //     \"aisle\": \"Produce\",\n    //     \"image\": \"cauliflower.jpg\",\n    //     \"consistency\": \"solid\",\n    //     \"name\": \"cauliflower\",\n    //     \"nameClean\": \"cauliflower\",\n    //     \"original\": \"1 head of cauliflower, raw\",\n    //     \"originalString\": \"1 head of cauliflower, raw\",\n    //     \"originalName\": \"cauliflower, raw\",\n    //     \"amount\": 1,\n    //     \"unit\": \"head\",\n    //     \"meta\": [\n    //     \"raw\"\n    //     ],\n    //     \"metaInformation\": [\n    //     \"raw\"\n    //     ],\n    //     \"measures\": {\n    //     \"us\": {\n    //     \"amount\": 1,\n    //     \"unitShort\": \"head\",\n    //     \"unitLong\": \"head\"\n    //     },\n    //     \"metric\": {\n    //     \"amount\": 1,\n    //     \"unitShort\": \"head\",\n    //     \"unitLong\": \"head\"\n    //     }\n    //     }\n    //     },\n    //     {\n    //     \"id\": 4047,\n    //     \"aisle\": \"Health Foods;Baking\",\n    //     \"image\": \"oil-coconut.jpg\",\n    //     \"consistency\": \"liquid\",\n    //     \"name\": \"coconut oil\",\n    //     \"nameClean\": \"coconut oil\",\n    //     \"original\": \"1 + 1 T coconut oil or butter\",\n    //     \"originalString\": \"1 + 1 T coconut oil or butter\",\n    //     \"originalName\": \"1 T coconut oil or butter\",\n    //     \"amount\": 1,\n    //     \"unit\": \"\",\n    //     \"meta\": [],\n    //     \"metaInformation\": [],\n    //     \"measures\": {\n    //     \"us\": {\n    //     \"amount\": 1,\n    //     \"unitShort\": \"\",\n    //     \"unitLong\": \"\"\n    //     },\n    //     \"metric\": {\n    //     \"amount\": 1,\n    //     \"unitShort\": \"\",\n    //     \"unitLong\": \"\"\n    //     }\n    //     }\n    //     },\n    //     {\n    //     \"id\": 20041,\n    //     \"aisle\": \"Pasta and Rice\",\n    //     \"image\": \"rice-brown-cooked.png\",\n    //     \"consistency\": \"solid\",\n    //     \"name\": \"cooked brown rice\",\n    //     \"nameClean\": \"cooked brown rice\",\n    //     \"original\": \"3 cups of cooked brown rice, cold\",\n    //     \"originalString\": \"3 cups of cooked brown rice, cold\",\n    //     \"originalName\": \"cooked brown rice, cold\",\n    //     \"amount\": 3,\n    //     \"unit\": \"cups\",\n    //     \"meta\": [\n    //     \"cold\",\n    //     \"cooked\"\n    //     ],\n    //     \"metaInformation\": [\n    //     \"cold\",\n    //     \"cooked\"\n    //     ],\n    //     \"measures\": {\n    //     \"us\": {\n    //     \"amount\": 3,\n    //     \"unitShort\": \"cups\",\n    //     \"unitLong\": \"cups\"\n    //     },\n    //     \"metric\": {\n    //     \"amount\": 709.764,\n    //     \"unitShort\": \"ml\",\n    //     \"unitLong\": \"milliliters\"\n    //     }\n    //     }\n    //     },\n    //     {\n    //     \"id\": 11215,\n    //     \"aisle\": \"Produce\",\n    //     \"image\": \"garlic.png\",\n    //     \"consistency\": \"solid\",\n    //     \"name\": \"garlic\",\n    //     \"nameClean\": \"garlic\",\n    //     \"original\": \"5 cloves of garlic, chopped\",\n    //     \"originalString\": \"5 cloves of garlic, chopped\",\n    //     \"originalName\": \"garlic, chopped\",\n    //     \"amount\": 5,\n    //     \"unit\": \"cloves\",\n    //     \"meta\": [\n    //     \"chopped\"\n    //     ],\n    //     \"metaInformation\": [\n    //     \"chopped\"\n    //     ],\n    //     \"measures\": {\n    //     \"us\": {\n    //     \"amount\": 5,\n    //     \"unitShort\": \"cloves\",\n    //     \"unitLong\": \"cloves\"\n    //     },\n    //     \"metric\": {\n    //     \"amount\": 5,\n    //     \"unitShort\": \"cloves\",\n    //     \"unitLong\": \"cloves\"\n    //     }\n    //     }\n    //     },\n    //     {\n    //     \"id\": 4517,\n    //     \"aisle\": \"Oil, Vinegar, Salad Dressing\",\n    //     \"image\": \"vegetable-oil.jpg\",\n    //     \"consistency\": \"liquid\",\n    //     \"name\": \"grapeseed oil\",\n    //     \"nameClean\": \"grape seed oil\",\n    //     \"original\": \"1 + 1 T grapeseed oil\",\n    //     \"originalString\": \"1 + 1 T grapeseed oil\",\n    //     \"originalName\": \"1 T grapeseed oil\",\n    //     \"amount\": 1,\n    //     \"unit\": \"\",\n    //     \"meta\": [],\n    //     \"metaInformation\": [],\n    //     \"measures\": {\n    //     \"us\": {\n    //     \"amount\": 1,\n    //     \"unitShort\": \"\",\n    //     \"unitLong\": \"\"\n    //     },\n    //     \"metric\": {\n    //     \"amount\": 1,\n    //     \"unitShort\": \"\",\n    //     \"unitLong\": \"\"\n    //     }\n    //     }\n    //     },\n    //     {\n    //     \"id\": 16424,\n    //     \"aisle\": \"Ethnic Foods;Condiments\",\n    //     \"image\": \"soy-sauce.jpg\",\n    //     \"consistency\": \"liquid\",\n    //     \"name\": \"low sodium soy sauce\",\n    //     \"nameClean\": \"lower sodium soy sauce\",\n    //     \"original\": \"3T reduced-sodium soy sauce\",\n    //     \"originalString\": \"3T reduced-sodium soy sauce\",\n    //     \"originalName\": \"reduced-sodium soy sauce\",\n    //     \"amount\": 3,\n    //     \"unit\": \"T\",\n    //     \"meta\": [\n    //     \"reduced-sodium\"\n    //     ],\n    //     \"metaInformation\": [\n    //     \"reduced-sodium\"\n    //     ],\n    //     \"measures\": {\n    //     \"us\": {\n    //     \"amount\": 3,\n    //     \"unitShort\": \"Tbsps\",\n    //     \"unitLong\": \"Tbsps\"\n    //     },\n    //     \"metric\": {\n    //     \"amount\": 3,\n    //     \"unitShort\": \"Tbsps\",\n    //     \"unitLong\": \"Tbsps\"\n    //     }\n    //     }\n    //     },\n    //     {\n    //     \"id\": 11304,\n    //     \"aisle\": \"Produce\",\n    //     \"image\": \"peas.jpg\",\n    //     \"consistency\": \"solid\",\n    //     \"name\": \"peas\",\n    //     \"nameClean\": \"petite peas\",\n    //     \"original\": \"1 cup frozen peas\",\n    //     \"originalString\": \"1 cup frozen peas\",\n    //     \"originalName\": \"frozen peas\",\n    //     \"amount\": 1,\n    //     \"unit\": \"cup\",\n    //     \"meta\": [\n    //     \"frozen\"\n    //     ],\n    //     \"metaInformation\": [\n    //     \"frozen\"\n    //     ],\n    //     \"measures\": {\n    //     \"us\": {\n    //     \"amount\": 1,\n    //     \"unitShort\": \"cup\",\n    //     \"unitLong\": \"cup\"\n    //     },\n    //     \"metric\": {\n    //     \"amount\": 236.588,\n    //     \"unitShort\": \"ml\",\n    //     \"unitLong\": \"milliliters\"\n    //     }\n    //     }\n    //     },\n    //     {\n    //     \"id\": 2047,\n    //     \"aisle\": \"Spices and Seasonings\",\n    //     \"image\": \"salt.jpg\",\n    //     \"consistency\": \"solid\",\n    //     \"name\": \"salt\",\n    //     \"nameClean\": \"salt\",\n    //     \"original\": \"salt, to taste\",\n    //     \"originalString\": \"salt, to taste\",\n    //     \"originalName\": \"salt, to taste\",\n    //     \"amount\": 8,\n    //     \"unit\": \"servings\",\n    //     \"meta\": [\n    //     \"to taste\"\n    //     ],\n    //     \"metaInformation\": [\n    //     \"to taste\"\n    //     ],\n    //     \"measures\": {\n    //     \"us\": {\n    //     \"amount\": 8,\n    //     \"unitShort\": \"servings\",\n    //     \"unitLong\": \"servings\"\n    //     },\n    //     \"metric\": {\n    //     \"amount\": 8,\n    //     \"unitShort\": \"servings\",\n    //     \"unitLong\": \"servings\"\n    //     }\n    //     }\n    //     },\n    //     {\n    //     \"id\": 11291,\n    //     \"aisle\": \"Produce\",\n    //     \"image\": \"spring-onions.jpg\",\n    //     \"consistency\": \"solid\",\n    //     \"name\": \"scallion\",\n    //     \"nameClean\": \"spring onions\",\n    //     \"original\": \"additional chopped scallion tops for garnish\",\n    //     \"originalString\": \"additional chopped scallion tops for garnish\",\n    //     \"originalName\": \"additional chopped scallion tops for garnish\",\n    //     \"amount\": 8,\n    //     \"unit\": \"servings\",\n    //     \"meta\": [\n    //     \"chopped\",\n    //     \"for garnish\"\n    //     ],\n    //     \"metaInformation\": [\n    //     \"chopped\",\n    //     \"for garnish\"\n    //     ],\n    //     \"measures\": {\n    //     \"us\": {\n    //     \"amount\": 8,\n    //     \"unitShort\": \"servings\",\n    //     \"unitLong\": \"servings\"\n    //     },\n    //     \"metric\": {\n    //     \"amount\": 8,\n    //     \"unitShort\": \"servings\",\n    //     \"unitLong\": \"servings\"\n    //     }\n    //     }\n    //     },\n    //     {\n    //     \"id\": 11291,\n    //     \"aisle\": \"Produce\",\n    //     \"image\": \"spring-onions.jpg\",\n    //     \"consistency\": \"solid\",\n    //     \"name\": \"scallions\",\n    //     \"nameClean\": \"spring onions\",\n    //     \"original\": \"7 scallions, chopped (keep white/light green ends separate from dark green tops)\",\n    //     \"originalString\": \"7 scallions, chopped (keep white/light green ends separate from dark green tops)\",\n    //     \"originalName\": \"scallions, chopped (keep white/light green ends separate from dark green tops)\",\n    //     \"amount\": 7,\n    //     \"unit\": \"\",\n    //     \"meta\": [\n    //     \"dark\",\n    //     \"green\",\n    //     \"chopped\",\n    //     \"(keep white/light ends separate from tops)\"\n    //     ],\n    //     \"metaInformation\": [\n    //     \"dark\",\n    //     \"green\",\n    //     \"chopped\",\n    //     \"(keep white/light ends separate from tops)\"\n    //     ],\n    //     \"measures\": {\n    //     \"us\": {\n    //     \"amount\": 7,\n    //     \"unitShort\": \"\",\n    //     \"unitLong\": \"\"\n    //     },\n    //     \"metric\": {\n    //     \"amount\": 7,\n    //     \"unitShort\": \"\",\n    //     \"unitLong\": \"\"\n    //     }\n    //     }\n    //     },\n    //     {\n    //     \"id\": 4058,\n    //     \"aisle\": \"Ethnic Foods\",\n    //     \"image\": \"sesame-oil.png\",\n    //     \"consistency\": \"liquid\",\n    //     \"name\": \"sesame oil\",\n    //     \"nameClean\": \"sesame oil\",\n    //     \"original\": \"2t toasted sesame oil\",\n    //     \"originalString\": \"2t toasted sesame oil\",\n    //     \"originalName\": \"toasted sesame oil\",\n    //     \"amount\": 2,\n    //     \"unit\": \"t\",\n    //     \"meta\": [\n    //     \"toasted\"\n    //     ],\n    //     \"metaInformation\": [\n    //     \"toasted\"\n    //     ],\n    //     \"measures\": {\n    //     \"us\": {\n    //     \"amount\": 2,\n    //     \"unitShort\": \"tsps\",\n    //     \"unitLong\": \"teaspoons\"\n    //     },\n    //     \"metric\": {\n    //     \"amount\": 2,\n    //     \"unitShort\": \"tsps\",\n    //     \"unitLong\": \"teaspoons\"\n    //     }\n    //     }\n    //     },\n    //     {\n    //     \"id\": 12023,\n    //     \"aisle\": \"Ethnic Foods;Spices and Seasonings\",\n    //     \"image\": \"sesame-seeds.png\",\n    //     \"consistency\": \"solid\",\n    //     \"name\": \"sesame seeds\",\n    //     \"nameClean\": \"sesame seeds\",\n    //     \"original\": \"toasted sesame seeds, optional\",\n    //     \"originalString\": \"toasted sesame seeds, optional\",\n    //     \"originalName\": \"toasted sesame seeds, optional\",\n    //     \"amount\": 8,\n    //     \"unit\": \"servings\",\n    //     \"meta\": [\n    //     \"toasted\"\n    //     ],\n    //     \"metaInformation\": [\n    //     \"toasted\"\n    //     ],\n    //     \"measures\": {\n    //     \"us\": {\n    //     \"amount\": 8,\n    //     \"unitShort\": \"servings\",\n    //     \"unitLong\": \"servings\"\n    //     },\n    //     \"metric\": {\n    //     \"amount\": 8,\n    //     \"unitShort\": \"servings\",\n    //     \"unitLong\": \"servings\"\n    //     }\n    //     }\n    //     }\n    //     ],\n    //     \"id\": 716426,\n    //     \"title\": \"Cauliflower, Brown Rice, and Vegetable Fried Rice\",\n    //     \"readyInMinutes\": 30,\n    //     \"servings\": 8,\n    //     \"sourceUrl\": \"http://fullbellysisters.blogspot.com/2012/01/cauliflower-fried-rice-more-veggies.html\",\n    //     \"image\": \"https://spoonacular.com/recipeImages/716426-556x370.jpg\",\n    //     \"imageType\": \"jpg\",\n    //     \"summary\": \"Cauliflower, Brown Rice, and Vegetable Fried Rice might be a good recipe to expand your side dish recipe box. Watching your figure? This gluten free, dairy free, lacto ovo vegetarian, and vegan recipe has <b>192 calories</b>, <b>7g of protein</b>, and <b>6g of fat</b> per serving. For <b>$1.12 per serving</b>, this recipe <b>covers 19%</b> of your daily requirements of vitamins and minerals. This recipe serves 8. This recipe from fullbellysisters.blogspot.com has 3689 fans. This recipe is typical of Chinese cuisine. From preparation to the plate, this recipe takes about <b>30 minutes</b>. Head to the store and pick up peas, broccoli, salt, and a few other things to make it today. Overall, this recipe earns an <b>awesome spoonacular score of 100%</b>. Users who liked this recipe also liked <a href=\\\"https://spoonacular.com/recipes/vegetable-fried-brown-rice-36199\\\">Vegetable Fried Brown Rice</a>, <a href=\\\"https://spoonacular.com/recipes/vegetable-fried-cauliflower-rice-933261\\\">Vegetable Fried Cauliflower Rice</a>, and <a href=\\\"https://spoonacular.com/recipes/easy-vegetable-fried-brown-rice-with-egg-802042\\\">Easy Vegetable Fried Brown Rice with Egg</a>.\",\n    //     \"cuisines\": [\n    //     \"Chinese\",\n    //     \"Asian\"\n    //     ],\n    //     \"dishTypes\": [\n    //     \"side dish\"\n    //     ],\n    //     \"diets\": [\n    //     \"gluten free\",\n    //     \"dairy free\",\n    //     \"lacto ovo vegetarian\",\n    //     \"vegan\"\n    //     ],\n    //     \"occasions\": [],\n    //     \"winePairing\": {\n    //     \"pairedWines\": [\n    //     \"chenin blanc\",\n    //     \"gewurztraminer\",\n    //     \"riesling\"\n    //     ],\n    //     \"pairingText\": \"Chenin Blanc, Gewurztraminer, and Riesling are great choices for Asian. The best wine for Asian food depends on the cuisine and dish - of course - but these acidic whites pair with a number of traditional meals, spicy or not. The Botanica Wines Mary Delany Chenin Blanc with a 5 out of 5 star rating seems like a good match. It costs about 32 dollars per bottle.\",\n    //     \"productMatches\": [\n    //     {\n    //     \"id\": 503852,\n    //     \"title\": \"Botanica Wines Mary Delany Chenin Blanc\",\n    //     \"description\": \"Complex and elegant, with layers of pure, concentrated pear, citrus and stone fruit avors, mouth-watering acidity and a tangy, mineral core.\",\n    //     \"price\": \"$31.99\",\n    //     \"imageUrl\": \"https://spoonacular.com/productImages/503852-312x231.jpg\",\n    //     \"averageRating\": 1,\n    //     \"ratingCount\": 5,\n    //     \"score\": 0.9375,\n    //     \"link\": \"https://click.linksynergy.com/deeplink?id=*QCiIS6t4gA&mid=2025&murl=https%3A%2F%2Fwww.wine.com%2Fproduct%2Fbotanica-wines-mary-delany-chenin-blanc-2017%2F735955\"\n    //     }\n    //     ]\n    //     },\n    //     \"instructions\": \"<ol><li><span></span>Remove the cauliflower's tough stem and reserve for another use. Using a food processor, pulse cauliflower florets until they resemble rice or couscous. You should end up with around four cups of \\\"cauliflower rice.\\\"</li><li>Heat 1T butter and 1T oil in a large skillet over medium heat. Add garlic and the white and light green pieces of scallion. Sauté about a minute.</li><li>Add the cauliflower to the pan. Stir to coat with oil, then spread out in pan and let sit; you want it cook a bit and to caramelize (get a bit brown), which will bring out the sweetness. After a couple of minutes, stir and spread out again.</li><li>Add cold rice (it separates easily, so it won't clump up during cooking), plus the additional grapeseed and coconut oil or butter. Raise heat to medium-high. Toss everything together and, again, spread the mixture out over the whole pan and press a bit into the bottom. Let it sit for about two minutes—so the rice can get toasted and a little crispy. Add the peas and broccoli and stir again. Drizzle soy sauce and toasted sesame oil over rice.</li><li>Cook for another minute or so and turn off heat. Add chopped scallion tops and toss.</li><li>I like to toast some sesame seeds in a dry pan; I sprinkle these and some more raw, chopped scallion over the top of the rice for added flavor and crunch.</li><li>Season to taste with salt and, if you'd like, more soy sauce. Keep in mind that if you're serving this with something salty and saucy (ie. teriyaki chicken) you may want to hold off on adding too much salt to the fried rice.</li></ol>\",\n    //     \"analyzedInstructions\": [\n    //     {\n    //     \"name\": \"\",\n    //     \"steps\": [\n    //     {\n    //     \"number\": 1,\n    //     \"step\": \"Remove the cauliflower's tough stem and reserve for another use. Using a food processor, pulse cauliflower florets until they resemble rice or couscous. You should end up with around four cups of \\\"cauliflower rice.\\\"\",\n    //     \"ingredients\": [\n    //     {\n    //     \"id\": 10011135,\n    //     \"name\": \"cauliflower florets\",\n    //     \"localizedName\": \"cauliflower florets\",\n    //     \"image\": \"cauliflower.jpg\"\n    //     },\n    //     {\n    //     \"id\": 10111135,\n    //     \"name\": \"cauliflower rice\",\n    //     \"localizedName\": \"cauliflower rice\",\n    //     \"image\": \"cauliflower.jpg\"\n    //     },\n    //     {\n    //     \"id\": 11135,\n    //     \"name\": \"cauliflower\",\n    //     \"localizedName\": \"cauliflower\",\n    //     \"image\": \"cauliflower.jpg\"\n    //     },\n    //     {\n    //     \"id\": 20028,\n    //     \"name\": \"couscous\",\n    //     \"localizedName\": \"couscous\",\n    //     \"image\": \"couscous-cooked.jpg\"\n    //     },\n    //     {\n    //     \"id\": 20444,\n    //     \"name\": \"rice\",\n    //     \"localizedName\": \"rice\",\n    //     \"image\": \"uncooked-white-rice.png\"\n    //     }\n    //     ],\n    //     \"equipment\": [\n    //     {\n    //     \"id\": 404771,\n    //     \"name\": \"food processor\",\n    //     \"localizedName\": \"food processor\",\n    //     \"image\": \"food-processor.png\"\n    //     }\n    //     ]\n    //     },\n    //     {\n    //     \"number\": 2,\n    //     \"step\": \"Heat 1T butter and 1T oil in a large skillet over medium heat.\",\n    //     \"ingredients\": [\n    //     {\n    //     \"id\": 1001,\n    //     \"name\": \"butter\",\n    //     \"localizedName\": \"butter\",\n    //     \"image\": \"butter-sliced.jpg\"\n    //     },\n    //     {\n    //     \"id\": 4582,\n    //     \"name\": \"cooking oil\",\n    //     \"localizedName\": \"cooking oil\",\n    //     \"image\": \"vegetable-oil.jpg\"\n    //     }\n    //     ],\n    //     \"equipment\": [\n    //     {\n    //     \"id\": 404645,\n    //     \"name\": \"frying pan\",\n    //     \"localizedName\": \"frying pan\",\n    //     \"image\": \"pan.png\"\n    //     }\n    //     ]\n    //     },\n    //     {\n    //     \"number\": 3,\n    //     \"step\": \"Add garlic and the white and light green pieces of scallion. Sauté about a minute.\",\n    //     \"ingredients\": [\n    //     {\n    //     \"id\": 11291,\n    //     \"name\": \"green onions\",\n    //     \"localizedName\": \"green onions\",\n    //     \"image\": \"spring-onions.jpg\"\n    //     },\n    //     {\n    //     \"id\": 11215,\n    //     \"name\": \"garlic\",\n    //     \"localizedName\": \"garlic\",\n    //     \"image\": \"garlic.png\"\n    //     }\n    //     ],\n    //     \"equipment\": []\n    //     },\n    //     {\n    //     \"number\": 4,\n    //     \"step\": \"Add the cauliflower to the pan. Stir to coat with oil, then spread out in pan and let sit; you want it cook a bit and to caramelize (get a bit brown), which will bring out the sweetness. After a couple of minutes, stir and spread out again.\",\n    //     \"ingredients\": [\n    //     {\n    //     \"id\": 11135,\n    //     \"name\": \"cauliflower\",\n    //     \"localizedName\": \"cauliflower\",\n    //     \"image\": \"cauliflower.jpg\"\n    //     },\n    //     {\n    //     \"id\": 0,\n    //     \"name\": \"spread\",\n    //     \"localizedName\": \"spread\",\n    //     \"image\": \"\"\n    //     },\n    //     {\n    //     \"id\": 4582,\n    //     \"name\": \"cooking oil\",\n    //     \"localizedName\": \"cooking oil\",\n    //     \"image\": \"vegetable-oil.jpg\"\n    //     }\n    //     ],\n    //     \"equipment\": [\n    //     {\n    //     \"id\": 404645,\n    //     \"name\": \"frying pan\",\n    //     \"localizedName\": \"frying pan\",\n    //     \"image\": \"pan.png\"\n    //     }\n    //     ]\n    //     },\n    //     {\n    //     \"number\": 5,\n    //     \"step\": \"Add cold rice (it separates easily, so it won't clump up during cooking), plus the additional grapeseed and coconut oil or butter. Raise heat to medium-high. Toss everything together and, again, spread the mixture out over the whole pan and press a bit into the bottom.\",\n    //     \"ingredients\": [\n    //     {\n    //     \"id\": 4047,\n    //     \"name\": \"coconut oil\",\n    //     \"localizedName\": \"coconut oil\",\n    //     \"image\": \"oil-coconut.jpg\"\n    //     },\n    //     {\n    //     \"id\": 1001,\n    //     \"name\": \"butter\",\n    //     \"localizedName\": \"butter\",\n    //     \"image\": \"butter-sliced.jpg\"\n    //     },\n    //     {\n    //     \"id\": 0,\n    //     \"name\": \"spread\",\n    //     \"localizedName\": \"spread\",\n    //     \"image\": \"\"\n    //     },\n    //     {\n    //     \"id\": 20444,\n    //     \"name\": \"rice\",\n    //     \"localizedName\": \"rice\",\n    //     \"image\": \"uncooked-white-rice.png\"\n    //     }\n    //     ],\n    //     \"equipment\": [\n    //     {\n    //     \"id\": 404645,\n    //     \"name\": \"frying pan\",\n    //     \"localizedName\": \"frying pan\",\n    //     \"image\": \"pan.png\"\n    //     }\n    //     ]\n    //     },\n    //     {\n    //     \"number\": 6,\n    //     \"step\": \"Let it sit for about two minutes—so the rice can get toasted and a little crispy.\",\n    //     \"ingredients\": [\n    //     {\n    //     \"id\": 20444,\n    //     \"name\": \"rice\",\n    //     \"localizedName\": \"rice\",\n    //     \"image\": \"uncooked-white-rice.png\"\n    //     }\n    //     ],\n    //     \"equipment\": [],\n    //     \"length\": {\n    //     \"number\": 2,\n    //     \"unit\": \"minutes\"\n    //     }\n    //     },\n    //     {\n    //     \"number\": 7,\n    //     \"step\": \"Add the peas and broccoli and stir again.\",\n    //     \"ingredients\": [\n    //     {\n    //     \"id\": 11090,\n    //     \"name\": \"broccoli\",\n    //     \"localizedName\": \"broccoli\",\n    //     \"image\": \"broccoli.jpg\"\n    //     },\n    //     {\n    //     \"id\": 11304,\n    //     \"name\": \"peas\",\n    //     \"localizedName\": \"peas\",\n    //     \"image\": \"peas.jpg\"\n    //     }\n    //     ],\n    //     \"equipment\": []\n    //     },\n    //     {\n    //     \"number\": 8,\n    //     \"step\": \"Drizzle soy sauce and toasted sesame oil over rice.Cook for another minute or so and turn off heat.\",\n    //     \"ingredients\": [\n    //     {\n    //     \"id\": 4058,\n    //     \"name\": \"sesame oil\",\n    //     \"localizedName\": \"sesame oil\",\n    //     \"image\": \"sesame-oil.png\"\n    //     },\n    //     {\n    //     \"id\": 16124,\n    //     \"name\": \"soy sauce\",\n    //     \"localizedName\": \"soy sauce\",\n    //     \"image\": \"soy-sauce.jpg\"\n    //     },\n    //     {\n    //     \"id\": 20444,\n    //     \"name\": \"rice\",\n    //     \"localizedName\": \"rice\",\n    //     \"image\": \"uncooked-white-rice.png\"\n    //     }\n    //     ],\n    //     \"equipment\": []\n    //     },\n    //     {\n    //     \"number\": 9,\n    //     \"step\": \"Add chopped scallion tops and toss.I like to toast some sesame seeds in a dry pan; I sprinkle these and some more raw, chopped scallion over the top of the rice for added flavor and crunch.Season to taste with salt and, if you'd like, more soy sauce. Keep in mind that if you're serving this with something salty and saucy (ie. teriyaki chicken) you may want to hold off on adding too much salt to the fried rice.\",\n    //     \"ingredients\": [\n    //     {\n    //     \"id\": 12023,\n    //     \"name\": \"sesame seeds\",\n    //     \"localizedName\": \"sesame seeds\",\n    //     \"image\": \"sesame-seeds.png\"\n    //     },\n    //     {\n    //     \"id\": 16124,\n    //     \"name\": \"soy sauce\",\n    //     \"localizedName\": \"soy sauce\",\n    //     \"image\": \"soy-sauce.jpg\"\n    //     },\n    //     {\n    //     \"id\": 11291,\n    //     \"name\": \"green onions\",\n    //     \"localizedName\": \"green onions\",\n    //     \"image\": \"spring-onions.jpg\"\n    //     },\n    //     {\n    //     \"id\": 5006,\n    //     \"name\": \"whole chicken\",\n    //     \"localizedName\": \"whole chicken\",\n    //     \"image\": \"whole-chicken.jpg\"\n    //     },\n    //     {\n    //     \"id\": 18070,\n    //     \"name\": \"toast\",\n    //     \"localizedName\": \"toast\",\n    //     \"image\": \"toast\"\n    //     },\n    //     {\n    //     \"id\": 20444,\n    //     \"name\": \"rice\",\n    //     \"localizedName\": \"rice\",\n    //     \"image\": \"uncooked-white-rice.png\"\n    //     },\n    //     {\n    //     \"id\": 2047,\n    //     \"name\": \"salt\",\n    //     \"localizedName\": \"salt\",\n    //     \"image\": \"salt.jpg\"\n    //     }\n    //     ],\n    //     \"equipment\": [\n    //     {\n    //     \"id\": 404645,\n    //     \"name\": \"frying pan\",\n    //     \"localizedName\": \"frying pan\",\n    //     \"image\": \"pan.png\"\n    //     }\n    //     ]\n    //     }\n    //     ]\n    //     }\n    //     ],\n    //     \"originalId\": null,\n    //     \"spoonacularSourceUrl\": \"https://spoonacular.com/cauliflower-brown-rice-and-vegetable-fried-rice-716426\"\n    //     }\n    // })\n  }\n  \n  render() {\n    const renderItem = ({ item }) => (\n        <Text style={styles.ingredients}><Text style={styles.value}>{(item.amount)}</Text> of <Text style={styles.value}>{(item.unit)}</Text> {item.name}</Text>\n    );\n    return (\n      <View style={styles.container}>\n        <View style={styles.colLeft}>\n          <Image source={{uri: this.props.route.params.item.image}} style={styles.recipeImage}/>\n          <Text style={styles.colLeftText}>{this.props.route.params.item.title}</Text>\n        </View> \n        <View style={styles.colRight}>\n          <Text style={styles.titleH2}>Détails</Text>\n          <Text>Vegetarian : <Text style={styles.value}>{(this.state.recette.vegetarian) ? 'Oui' : 'Non' }</Text></Text>\n          <Text>Vegan : <Text style={styles.value}>{(this.state.recette.vegan) ? 'Oui' : 'Non' }</Text></Text>\n          <Text>Price : <Text style={styles.value}>{this.state.recette.pricePerServing} $</Text></Text>\n\n          <Text style={styles.spacer}> </Text>\n\n          <Text style={styles.titleH2}>Ingrédients</Text>\n          <FlatList\n                style={styles.ingredientsContainer}\n                data={this.state.recette.extendedIngredients}\n                renderItem={renderItem}\n                keyExtractor={item => item.id}\n            />\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    // flex: 1,\n    // flexDirection: 'row',\n    // flexWrap: 'wrap',\n    // backgroundColor: '#fff',\n    // alignItems: 'center',\n    // justifyContent: 'center',\n    // display:'flex',\n  },\n  recipeImage: {\n    width:500,\n    height: 500,\n    alignSelf: 'center',\n    textAlign: 'center',\n    padding :15,\n    margin : 'auto',\n    marginTop : 20,\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n    borderBottomLeftRadius: 20,\n    borderBottomRightRadius: 20\n},\ncolLeft: {\n  flex: 0.5, //why this doesnt work???\n  height: 600,\n  padding: 10,\n\n  backgroundColor: '#fff',\n  alignItems: 'center',\n  justifyContent: 'center',\n},\ncolLeftText: {\n  color: '#ffa500',\n  marginTop: 20,\n  fontSize: 20\n\n},\ncolRight: {\n  flex: 0.5, //why this doesnt work???\n  height: 100,\n  padding: 10,\n\n  backgroundColor: '#fff',\n  alignItems: 'center',\n  justifyContent: 'center',\n},\ntitleH2: {\n  fontSize: 30,\n  marginBottom: 10,\n},\nspacer: {\n  height: 1,\n  width: 500,\n  backgroundColor: '#000',\n  margin: 20\n},\nvalue: {\n  fontWeight: 'bold',\n  color: '#ffa500',\n},\ningredientsContainer: {\n  flex: 1,\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n},\ningredients: {\n  color: '#000'\n}\n});\n\nexport default DetailRecipe;"]},"metadata":{},"sourceType":"module"}